name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Pypy3.10
        uses: actions/setup-python@v5
        with:
          python-version: "pypy3.10"

      - name: Install Python dependencies
        run: |
          pypy3 -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install C dependencies
        run: |
          sudo apt-get install build-essential  # For Ubuntu

      - name: Run pylint
        run: |
          pylint --fail-under=9 src/

      - name: Format python code with ruff
        run: pypy3 -m ruff format

      - name: Build
        run: |
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          make

      - name : Run tests
        run: |
          pypy3 -m pytest ..

      - name: Check for formatting changes
        id: git-check
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "modified=true" >> $GITHUB_ENV
          else
            echo "modified=false" >> $GITHUB_ENV
          fi

      - name: Commit formating changes
        if: ${{ success() && env.modified == 'true'}}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add src test
          git commit -m "apply automated code formating"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
