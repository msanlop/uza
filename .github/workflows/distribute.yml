name: Build

on:
    push:
        tags:
            - "v*"

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4

      # Used to host cibuildwheel
      - uses: actions/setup-python@v5

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.21.3

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_MSVS_VERSION: latest # use MSVC, not ninja

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  upload_pypi:
    name: Upload to PyPI
    if: startsWith(github.ref, 'refs/tags/v')
    environment:
      name: publish
      url: https://pypi.org/p/uza
    needs: build_wheels
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download wheels
        uses: actions/download-artifact@v4
        with:
          path: wheelhouse

      - name: Create dist directory
        run: mkdir -p dist

      - name: Flatten wheelhouse into dist for nest step
        run: mv wheelhouse/*/*.whl dist/

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  create_github_release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: upload_pypi
    steps:
      - uses: actions/checkout@v4

      - name: Download built wheels
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: dist/*
          body: "Automated release of version ${{ github.ref_name }}"
          draft: false
          prerelease: true
