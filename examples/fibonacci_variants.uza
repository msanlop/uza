func fib(n : int) => int {
    if n <= 1 then return n
    return fib(n-1) + fib(n-2)
}

func fibTailRec(n : int, prev: int, curr: int) => int {
    if n == 0 then return prev
    if n == 1 then return curr
    return fibTailRec(n-1, curr, prev + curr)
}

func fibLoop(n : int) => int {
    if n < 2 then return n
    var a = 0
    var b = 1
    for var i = 0; i < n - 1; i+= 1 {
        const temp = a + b
        a = b
        b = temp
    }
    return b
}

const n = 35
const start = timeMs()
const res = fib(n)
println(res == 9227465)
const delta = timeMs() - start
println(delta.toString() + "ms")

//const res = fibTailRec(n, 0, 1)
println(f"fib({toString(n)}) = {toString(res)}")
