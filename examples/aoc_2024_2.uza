const input_str = "7 6 4 2 1
1 2 7 8 9
9 7 6 2 1
1 3 2 4 5
8 6 4 4 1
1 3 6 7 9"
const levels: List<List<int>> = List()

func parse_lines(input: string) => List<string> {
    var start: int = 0
    var end: int = 0
    const lines: List<string> = List()
    const input_len = len(input)
    while end < input_len {
        while ((end < input_len) and (get(input, end) != "\n")) {
            end+=1
        }
        append(lines, substring(input, start, end))
        start = end + 1
        end += 1
    }
    return lines
}

func parse_ints(line: string, levels: List<List<int>>) => void {
    var start = 0
    var end = 0
    const line_len = len(line)
    const level: List<int> = List()
    while end < line_len {
        for ;(end < line_len) and (get(line, end) != " "); do end += 1
        append(level, toInt(substring(line, start, end)))
        while (end < line_len) and (get(line, end) == " ") do end += 1
        start = end
    }
    append(levels, level)
}

func checkLevel(level: List<int>) => bool {
    const level_count = len(level)
    var increasing = false
    if (get(level, 0) < get(level, 1)) then increasing = true
    else increasing = false

    if increasing {
        for var i = 0; i < (level_count - 1); i+=1 {
            const delta = get(level, i + 1) - get(level, i)
            if (delta < 1) or (3 < delta) then return false
        }
        return true
    }
    else
        for var i = 0; i < (level_count - 1); i+=1 {
            const delta = get(level, i) - get(level, i + 1)
            if (delta < 1) or (3 < delta) then return false
        }
        return true
}


// have to reimplement some stuff
//func checkLevelWithDampener(level: List<int>) => bool {
//    const level_count = len(level)
//    if checkLevel(level) then return true
//
//    for var i=0; i < level_count; i+=1 {
//        const cpy = copy(level)
//        removeAt(cpy, i)
//        if checkLevel(cpy) then return true
//    }
//    return false
//}

const lines = parse_lines(input_str)
for var i = 0; i < len(lines); i+=1 {
    parse_ints(get(lines, i), levels)
}

var sum1 = 0
var sum2 = 0
for var i = 0; i < len(levels); i+=1 {
    if checkLevel(get(levels, i)) then sum1 += 1
    //if checkLevelWithDampener(get(levels, i)) then sum2 += 1
}

println("PART 1: the number of safe reports is " + toString(sum1))
//print("PART 2: the number of safe reports is: ") // have to reimplement stuff
//println(sum2)
